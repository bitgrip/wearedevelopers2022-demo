name: Deploy Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: 16.x

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'
    - run: yarn
    - run: yarn lint

  unitTests:
    needs: check
    strategy:
      matrix:
        jestgroup: ['cms/types', 'logic']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - run: yarn
      - run: yarn test --group=${{ matrix.jestgroup }}

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: JEST Report - ${{ matrix.jestgroup }}
          path: reports/jest-*.xml
          reporter: jest-junit

  funcionalTests:
    needs: unitTests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - run: yarn
      - run: yarn test --group=func

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: JEST Report - func
          path: reports/jest-*.xml
          reporter: jest-junit

  screenshotRegressionTests:
    needs: funcionalTests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
      - run: yarn
      - run: yarn chromatic:ci
        env:
          CHROMATIC_TOKEN: ${{ secrets.CHROMATIC_TOKEN }}

      - name: Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()
        with:
          name: Chromatic Report - screenshots
          report_paths: '**/reports/chromatic-*.xml'

  build:
    needs: screenshotRegressionTests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'
    - run: yarn
    - run: yarn build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - run: curl -X POST -d '{}' ${{ secrets.NETLIFY_DEPLOY_HOOK_URL }}
